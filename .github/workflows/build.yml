name: 'Build'

on:
  push:
    branches:
      - dev
      - "release*"
      - 420
      - unleashed
      - 'zlo/lf-rfid-overhaul'
    tags:
      - '*'
  pull_request:

env:
  TARGETS: f7
  DEFAULT_TARGET: f7

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - name: 'Decontaminate previous build leftovers'
        run: |
          if [ -d .git ]
          then
            git submodule status \
              || git checkout `git rev-list --max-parents=0 HEAD | tail -n 1`
          fi

      - name: 'Checkout code'
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}

      - name: 'Make artifacts directory'
        run: |
          test -d artifacts && rm -rf artifacts || true
          mkdir artifacts

      - name: 'Generate suffix and folder name'
        id: names
        run: |
          REF=${{ github.ref }}
          if [[ ${{ github.event_name }} == 'pull_request' ]]; then
            REF=${{ github.head_ref }}
          fi
          BRANCH_OR_TAG=${REF#refs/*/}
          SHA=$(git rev-parse --short HEAD)

          if [[ "${{ github.ref }}" == "refs/tags/"* ]]; then
            SUFFIX=${BRANCH_OR_TAG//\//_}
          else
            SUFFIX=${BRANCH_OR_TAG//\//_}-$(date +'%d%m%Y')-${SHA}
          fi

          echo "WORKFLOW_BRANCH_OR_TAG=${BRANCH_OR_TAG}" >> $GITHUB_ENV
          echo "DIST_SUFFIX=${SUFFIX}" >> $GITHUB_ENV
          echo "::set-output name=artifacts-path::${BRANCH_OR_TAG}"
          echo "::set-output name=suffix::${SUFFIX}"
          echo "::set-output name=short-hash::${SHA}"
          echo "::set-output name=default-target::${DEFAULT_TARGET}"

      - name: 'Bundle scripts'
        if: ${{ !github.event.pull_request.head.repo.fork }}
        run: |
          tar czpf artifacts/flipper-z-any-scripts-${{steps.names.outputs.suffix}}.tgz scripts

      - name: 'Build the firmware'
        run: |
          set -e
          for TARGET in ${TARGETS}
          do
            FBT_TOOLCHAIN_PATH=/opt ./fbt TARGET_HW=`echo ${TARGET} | sed 's/f//'` updater_package ${{ startsWith(github.ref, 'refs/tags') && 'DEBUG=0 COMPACT=1' || '' }}
          done

      - name: 'Move upload files'
        if: ${{ !github.event.pull_request.head.repo.fork }}
        run: |
          set -e
          for TARGET in ${TARGETS}
          do
            mv dist/${TARGET}-*/* artifacts/
          done

      - name: 'Bundle self-update package'
        if: ${{ !github.event.pull_request.head.repo.fork }}
        run: |
          set -e
          for UPDATEBUNDLE in artifacts/*/
          do
            BUNDLE_NAME=`echo $UPDATEBUNDLE | cut -d'/' -f2`
            echo Packaging ${BUNDLE_NAME}
            tar czpf artifacts/flipper-z-${BUNDLE_NAME}.tgz -C artifacts ${BUNDLE_NAME}
            rm -rf artifacts/${BUNDLE_NAME}
          done

      - name: 'Bundle resources'
        if: ${{ !github.event.pull_request.head.repo.fork }}
        run: |
          tar czpf artifacts/flipper-z-any-resources-${{steps.names.outputs.suffix}}.tgz -C assets resources

      - name: 'Bundle core2 firmware'
        if: ${{ !github.event.pull_request.head.repo.fork }}
        run: |
          FBT_TOOLCHAIN_PATH=/opt ./fbt copro_dist
          tar czpf artifacts/flipper-z-any-core2_firmware-${{steps.names.outputs.suffix}}.tgz -C assets core2_firmware

      - name: 'Copy .map file'
        run: |
          cp build/f7-firmware-D/firmware.elf.map artifacts/flipper-z-f7-firmware-${{steps.names.outputs.suffix}}.elf.map

      - name: 'Upload artifacts to update server'
        uses: actions/upload-artifact@v3
        with:
          name: firmware
          path: artifacts

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "Development Build"
          files: |
            artifacts/flipper-z-f7-update-*
